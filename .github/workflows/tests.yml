name: Unity CI/CD 

on: 
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review      

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  checkLicense:
    name: Check for the Unity license
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1

  testAllModes:
    needs: checkLicense
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest       
    strategy:
      fail-fast: false
      matrix:
        projectPath: 
          - Descension
        customImage: 
          - unityci/editor:2020.3.26f1-base-0
        testMode:
          - playmode
          - editmode    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true      

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |            
            Library-

      - name: Run Tests
        uses: game-ci/unity-test-runner@v2
        id: tests       
        env: 
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          customImage: ${{ matrix.customImage }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: artifacts/${{ matrix.testMode }}
          # githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
