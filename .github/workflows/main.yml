name: Unity CI

on: [push, pull_request]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  checkLicense:
    name: Check for the Unity license
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1

  # testAllModes:
  #   needs: checkLicense
  #   name: Test in ${{ matrix.testMode }}
  #   runs-on: ubuntu-latest       
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       projectPath: 
  #         - intd-450-prototype
  #       customImage: 
  #         - unityci/editor:2020.3.26f1-base-0
  #       testMode:
  #         # - playmode
  #         # - editmode    
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         lfs: true      

  #     - name: Restore LFS cache
  #       uses: actions/cache@v2
  #       id: lfs-cache
  #       with:
  #         path: ${{ matrix.projectPath }}/Library
  #         key: Library-${{ matrix.projectPath }}
  #         restore-keys: |            
  #           Library-

  #     - name: Run Tests
  #       uses: game-ci/unity-test-runner@v2
  #       id: tests       
  #       env: 
  #         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #       with:
  #         projectPath: ${{ matrix.projectPath }}
  #         customImage: ${{ matrix.customImage }}
  #         testMode: ${{ matrix.testMode }}
  #         artifactsPath: artifacts/${{ matrix.testMode }}
  #         # githubToken: ${{ secrets.GITHUB_TOKEN }}
  #         checkName: ${{ matrix.testMode }} Test Results

  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v2
  #       if: always()
  #       with:
  #         name: Test results for ${{ matrix.testMode }}
  #         path: ${{ steps.tests.outputs.artifactsPath }}

#  buildWebGL:
#    needs: testAllModes
#    name: Build for WebGL
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-build-WebGL
#          restore-keys: |
#            Library-build-
#            Library-
#
#      - uses: game-ci/unity-builder@v2
#        with:
#          targetPlatform: WebGL
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: build-WebGL
#          path: build/WebGL
#
  buildWindows:
    # needs: testAllModes
    name: Build for Windows
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
        projectPath: 
          - intd-450-prototype
        customImage: 
          - unityci/editor:2020.3.26f1-base-0
        buildsPath:
          - build        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true      

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |            
            Library-
            
      - uses: game-ci/unity-builder@v2
        with:
          unityVersion: auto
          allowDirtyBuild: true
          targetPlatform: ${{ matrix.targetPlatform }}          
          customImage: ${{ matrix.customImage }}          
          projectPath: ${{ matrix.projectPath }}
          buildsPath: ${{ matrix.buildsPath }}
          buildName: ${{ matrix.buildName }}

      - uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.targetPlatform }}
          path: /${{ matrix.buildsPath }}/${{ matrix.targetPlatform }}
#
#  buildAndroid:
#    needs: testAllModes
#    name: Build for Android
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v2
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - name: Restore Library cache
#        uses: actions/cache@v2
#        with:
#          path: Library
#          key: Library-build-Android
#          restore-keys: |
#            Library-build-
#            Library-
#
#      - uses: game-ci/unity-builder@v2
#        with:
#          targetPlatform: Android
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: build-Android
#          path: build/Android
#
#
  # WE WILL WANT THIS LATER 
  # deployPages:
  #   needs: buildWindows
  #   name: Deploy to Github Pages
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: build-WebGL
  #         path: build

  #     - name: Display structure of root files
  #       run: ls -R
  #       working-directory: build/WebGL

  #     - name: Deploy ðŸš€
  #       uses: JamesIves/github-pages-deploy-action@4.1.4
  #       with:
  #         branch: gh-pages
  #         folder: build/WebGL